# puppet master configuration
---
- hosts: puppetserver
  become: true
  gather_facts: true

  tasks:
  - name: Install required packages in Redhat family
    yum:
      name: "{{ rpm_package }}"
      state: latest
      update_cache: true
    when: ansible_os_family == "RedHat"

  - name: Disable SElinux
    selinux:
      state: disabled
    when: ansible_os_family == "RedHat"

  - name: Import puppet rpm key
    rpm_key:
      state: present
      key: "{{ puppet_rpm_key }}"
    when: ansible_os_family == "RedHat"

  - name: Install puppet7 rpm in Redhat 9 family
    yum:
      name: "{{ puppet7_rpm_el9 }}"
      state: present
      update_cache: true
    when: ansible_os_family == "RedHat"
      and ansible_distribution_major_version |int == 9
      and install_puppet7

  - name: Install puppet8 rpm in Redhat 9 family
    yum:
      name: "{{ puppet8_rpm_el9 }}"
      state: present
      update_cache: true
    when: ansible_os_family == "RedHat"
      and ansible_distribution_major_version |int == 9
      and install_puppet8

  - name: Install puppet7 server in Redhat 9 family
    yum:
      name: "{{ puppet7_server_el9 }}"
      state: present
      update_cache: true
    when: ansible_os_family == "RedHat"
      and ansible_distribution_major_version |int == 9
      and install_puppet7

  - name: Install puppet8 server in Redhat 9 family
    yum:
      name: "{{ puppet8_server_el9 }}"
      state: present
      update_cache: true
    when: ansible_os_family == "RedHat"
      and ansible_distribution_major_version |int == 9
      and install_puppet8

  - name: add keyring for puppet in debian family
    get_url:
      url: https://apt.puppet.com/keyring.gpg
      dest: /etc/apt/trusted.gpg.d/puppet-keyring.asc
    when: ansible_os_family == "Debian"

  - name: Install puppet7 release package for debian 12
    apt:
      deb: "{{ puppet7_release_debian12 }}"
      state: present
      update_cache: yes
    when: ansible_distribution == "Debian"
      and ansible_distribution_major_version|int == 12
      and install_puppet7

  - name: Install puppet7 release package for ubuntu 22
    apt:
      deb: "{{ puppet7_release_ubu22 }}"
      state: present
      update_cache: yes
    when: ansible_distribution == "Ubuntu"
      and ansible_distribution_major_version|int == 22
      and install_puppet7

  - name: Install puppet8 release package for debian 12
    apt:
      deb: "{{ puppet8_release_debian12 }}"
      state: present
      update_cache: yes
    when: ansible_distribution == "Debian"
      and ansible_distribution_major_version|int == 12
      and install_puppet8

  - name: Install puppet8 release package for ubuntu 22
    apt:
      deb: "{{ puppet8_release_ubu22 }}"
      state: present
      update_cache: yes
    when: ansible_distribution == "Ubuntu"
      and ansible_distribution_major_version|int == 22
      and install_puppet8

  - name: Install required packages in debian os family
    apt:
      name: "{{ deb_package }}"
      state: latest
      update_cache: yes
    when: ansible_os_family == "Debian"

  - name: Install puppet server in debian os family
    apt:
      name: [ 'puppetserver' ]
      state: latest
      update_cache: yes
    when: ansible_os_family == "Debian"

  - name: Allocating 512m ram for server in Redhat family
    lineinfile:
      path: /etc/sysconfig/puppetserver
      regexp: "{{ java_orig_args }}"
      line: "{{ java_replace_args_512m }}"
    when: ansible_os_family == "RedHat"
      and ansible_virtualization_role == 'guest'

  - name: Set 512mb of ram to puppet in Debian
    lineinfile:
      path: /etc/default/puppetserver
      regexp: "{{ java_orig_args }}"
      line: "{{ java_replace_args_512m }}"
    when: ansible_os_family == "Debian"
      and ansible_virtualization_role == 'guest'

  - name: make puppet directory in var
    file:
      path: /var/lib/puppet
      state: directory
      mode: '0755'
      owner: puppet
      group: puppet
    when: ansible_os_family == "RedHat"
       or ansible_os_family == "Debian"

  - name: make puppet ssl directory in var
    file:
      path: /var/lib/puppet/ssl
      state: directory
      mode: '0755'
      owner: puppet
      group: puppet
    when: ansible_os_family == "RedHat"
       or ansible_os_family == "Debian"

  - name: Make environment directory for all env
    file:
      path: /etc/puppetlabs/code/environments
      state: directory
      mode: '0755'
    when: ansible_os_family == "Debian"
       or ansible_os_family == "RedHat"

  - name: Make devel directory for devel env
    file:
      path: /etc/puppetlabs/code/environments/devel
      state: directory
      mode: '0755'
    when: ansible_os_family == "Debian"
       or ansible_os_family == "RedHat"

  - name: Make production directory for prod env
    file:
      path: /etc/puppetlabs/code/environments/production
      state: directory
      mode: '0755'
    when: ansible_os_family == "Debian"

  - name: Enabling firewall ports for puppetmaster
    firewalld:
      port: "{{ item }}"
      permanent: yes
      state: enabled
    with_items: "{{ port }}"
    when: ansible_os_family == "RedHat"
       or ansible_os_family == "Debian"

  - name: Settings for hieradata yaml conf
    template:
      src: template/hiera.yaml.j2
      dest: /etc/puppetlabs/puppet/hiera.yaml
      owner: puppet
      group: puppet
    when: ansible_os_family == "Debian"
       or ansible_os_family == "RedHat"
    notify:
      - restart puppet server

  - name: Settings for puppetserver configuration file
    template:
      src: template/puppet.conf.j2
      dest: /etc/puppetlabs/puppet/puppet.conf
    when: ansible_os_family == "RedHat"
       or ansible_os_family == "Debian"

  - name: puppetserver ip in host file in Redhat family
    lineinfile:
      path: /etc/hosts
      line: "{{ puppet_server_ip }} puppetserver"
    when: ( ansible_os_family == "RedHat"
       or ansible_os_family == "Debian" )
      and ansible_virtualization_role == 'guest'

  - name: Restart puppetserver and related services in Debian
    service:
      name: "{{ item }}"
      enabled: yes
      state: restarted
    with_items:
      - ntp
      - puppetserver
      - firewalld
    when: ansible_os_family == "Debian"

  - name: Restart puppetserver and related services in RedHat
    service:
      name: "{{ item }}"
      enabled: yes
      state: restarted
    with_items:
      # - chronyd
      - puppet
      - puppetserver
      - firewalld
    when: ansible_os_family == "RedHat"

  handlers:
    - import_tasks: handlers/main.yml
